// 根据 speedrunData 创建或更新 Category
const _createOrUpdateCategoryBySpeedrunData = async ({ speedrunData, game }) => {
  let speedrunId = speedrunData.id
  let name = speedrunData.name
  let updatedAt = new Date()

  return await Category.findOneAndUpdate(
    { speedrunId }, 
    { speedrunData, speedrunId, name, updatedAt, game: game._id }, 
    { upsert: true, new: true }
  )
}

// 从 speedrun 同步游戏速通规则，时间间隔六小时
const getOrSyncCategories = async ({ id }) => {
  let game = await Game.findOne({ 
    $or: [
      { speedrunId: id }, 
      { abbreviation: id }
    ] 
  }).populate('categories')

  if (!game) { return [] }

  let now = new Date()
  let { categoriesUpdatedAt } = game

  if (!categoriesUpdatedAt || now - categoriesUpdatedAt > 24 * 60 * 60 * 1000) {
    let res = await speedrunAPI.games.getGameCategories({ id })
    let _categories = []
    for (let d of res.data) {
      let c = await _createOrUpdateCategoryBySpeedrunData({ speedrunData: d, game })
      _categories.push(c)
    }
    game.categories = _categories
    game.categoriesUpdatedAt = new Date()
    await game.save()
  }

  return game.categories
}